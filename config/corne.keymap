/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// | CT/E |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | S/HM |  z  |  x  |  c  |  v  |  b  |   |  n  |  m   |  ,  |  .  |  /  | A/ED |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp PSCRN      &kp Q    &kp W     &kp E            &kp R         &kp T       &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &mt LCTRL ESC  &kp A    &kp S     &kp D            &kp F         &kp G       &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &mt LSHFT HOME &kp Z    &kp X     &kp C            &kp V         &kp B       &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RCTRL END
                  &kp LGUI &lt 1 TAB &mt LALT SPACE   &mt RSHFT RET &lt 2 BSPC  &kp RALT
                        >;
                };

                left_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5      &kp CARET &kp AMPS  &kp STAR  &kp LPAR &kp RPAR &kp PLUS
   &trans     &kp RET      &kp LEFT     &kp UP       &kp DOWN     &kp RIGHT   &trans    &kp PG_DN &kp PG_UP &kp LBRC &kp RBRC &kp UNDER
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE  &trans    &trans    &trans    &trans   &trans   &trans
                                        &trans       &trans       &trans      &trans    &trans &kp RGUI
                        >;
                };

                right_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TILDE &kp EXCL  &kp AT  &kp HASH            &kp DOLLAR &kp PERCENT &kp N6   &kp N7   &kp N8 &kp N9    &kp N0   &kp EQUAL
   &trans    &trans    &trans  &trans              &trans     &trans      &trans   &trans   &trans &kp LBKT  &kp RBKT &kp MINUS
   &kp LSHFT &trans    &trans  &trans              &trans     &trans      &trans   &trans   &trans &trans    &trans   &trans
                               &kp LGUI            &trans  &trans      &trans   &trans   &trans
                        >;
                };

//                 double_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
// //                    | GUI |     | SPC |   | ENT |     | ALT |
//                         bindings = <
//    &trans &kp F1   &kp F2  &kp F3   &kp F4  &kp trans   &kp PRCNT &kp KP_N7  &kp KP_N8  &kp KP_N9 &kp KP_N0    &kp KP_PLUS
//    &trans &kp F5   &kp F6  &kp F7   &kp F8  &trans      &kp ASTRK &kp KP_N4  &kp KP_N5  &kp KP_N6 &kp KP_DOT   &kp KP_MINUS
//    &trans &kp F9   &kp F10 &kp F11  &kp F12 &trans      &kp SLASH &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp KP_COMMA &kp KP_EQUAL
//                            &kp LGUI &trans  &trans      &trans    &trans     &kp RALT
//                         >;
//                 };

        };
};
