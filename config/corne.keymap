/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
                        tapping-term-ms = <200>;
};

&lt {
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// | CT/E |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | S/HM |  z  |  x  |  c  |  v  |  b  |   |  n  |  m   |  ,  |  .  |  /  | A/ED |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB       &kp Q        &kp W        &kp E              &kp R           &kp T         &kp Y &kp U  &kp I     &kp O     &kp P      &kp BSLH
   &mt LALT GRAVE     &bhm LSHFT A  &lt 5 S      &lt 4 D            &lt 3 F         &kp G         &kp H &kp J  &kp K     &kp L     &bhm RSHFT SEMI &mt RCTRL SQT
   &kp RET   &lt 2 Z   &kp X        &kp C              &kp V           &kp B         &kp N &bhm RALT M  &lt 3 COMMA &kp DOT   &lt 2 FSLH  &kp BSPC
                  // &kp LALT &lt 1 SPACE &lt 2 BSPC       &mt RSHFT RET     &lt 1 SPACE  &kp RALT
                  &kp LGUI &mt LCTRL ESC &lt 1 SPACE       &lt 2 RET     &mt RALT RET  &lt 1 END
                        >;
                };

                left_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   // &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp CARET  &kp AMPS     &kp STAR     &kp LPAR  &kp RPAR  &kp UNDER  &kp PLUS   
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6  &kp N7     &kp N8     &kp N9 &kp N0 &kp MINUS &kp EQUAL  
   &trans      &trans    &trans     &trans       &trans     &trans    &trans     &trans     &trans       &trans &kp LBKT  &kp RBKT 
   // &trans     &kp RET      &kp LEFT     &kp UP       &kp DOWN     &kp RIGHT    &trans     &kp PG_DN    &kp PG_UP    &kp LBKT &kp RBKT &kp MINUS
   &trans     &trans           &trans &trans &trans   &trans            &trans  &trans &trans  &trans  &trans  &trans
                                        &trans       &trans       &trans       &mo 5     &trans       &trans
                        >;
                };

                right_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   // &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PERCENT       &kp N6   &kp N7   &kp N8 &kp N9    &kp N0    &kp MINUS &kp EQUAL
   &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PERCENT      &kp CARET  &kp AMPS     &kp STAR     &kp LPAR &kp RPAR &kp UNDER &kp PLUS  
   &kp TILDE       &trans       &trans    &trans   &trans       &trans            &trans   &trans   &trans &trans  &kp LBRC &kp RBRC   
   // &trans     &trans       &trans       &trans       &trans       &trans            &trans   &trans   &trans &kp LBRC  &kp RBRC &kp UNDER
   &trans &trans   &trans  &trans   &trans  &trans    &trans       &trans  &trans   &trans &trans &trans
                               &trans            &trans  &mo 5      &trans   &trans   &trans
                        >;
                };

                double_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   // &trans &kp F1   &kp F2  &kp F3   &kp F4  &trans   &kp PRCNT &kp KP_N7  &kp KP_N8  &kp KP_N9 &kp KP_N0    &kp KP_PLUS
   // &trans &kp F5   &kp F6  &kp F7   &kp F8  &trans      &kp ASTRK &kp KP_N4  &kp KP_N5  &kp KP_N6 &kp KP_DOT   &kp KP_MINUS
   // &trans &kp F9   &kp F10 &trans   &kp F11 &kp F12     &kp SLASH &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp KP_COMMA &kp KP_EQUAL
   &trans &kp F1   &kp F2  &kp F3   &kp F4  &trans      &kp N7  &kp N8  &kp N9 &kp N0    &kp MINUS   &kp PLUS
   &trans &kp F5   &kp F6  &kp F7   &kp F8  &kp PSCRN   &kp ASTRK &kp N4  &kp N5  &kp N6  &kp COMMA &kp CARET
   &trans &kp F9   &kp F10 &kp F11  &kp F12 &trans  &kp SLASH  &kp N1  &kp N2  &kp N3 &kp DOT   &kp PRCNT
                           &trans &trans  &trans      &trans    &trans  &trans
                        >;
                };

                emac_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   // &trans &kp F1   &kp F2  &kp F3   &kp F4  &trans   &kp PRCNT &kp KP_N7  &kp KP_N8  &kp KP_N9 &kp KP_N0    &kp KP_PLUS
   // &trans &kp F5   &kp F6  &kp F7   &kp F8  &trans      &kp ASTRK &kp KP_N4  &kp KP_N5  &kp KP_N6 &kp KP_DOT   &kp KP_MINUS
   // &trans &kp F9   &kp F10 &trans   &kp F11 &kp F12     &kp SLASH &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp KP_COMMA &kp KP_EQUAL
   &trans &trans   &trans  &trans   &trans  &trans   &trans &trans  &trans  &trans &trans    &trans
   &trans &trans   &trans  &trans   &trans  &trans   &kp BSPC &kp D  &trans  &kp DEL &trans   &trans
   &trans &trans   &trans &trans  &trans &trans      &kp SPACE &kp RET   &trans  &trans &trans &trans
                           &trans &trans  &trans      &trans    &trans     &trans
                        >;
                };

                arrow_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   // &trans &kp F1   &kp F2  &kp F3   &kp F4  &trans   &kp PRCNT &kp KP_N7  &kp KP_N8  &kp KP_N9 &kp KP_N0    &kp KP_PLUS
   // &trans &kp F5   &kp F6  &kp F7   &kp F8  &trans      &kp ASTRK &kp KP_N4  &kp KP_N5  &kp KP_N6 &kp KP_DOT   &kp KP_MINUS
   // &trans &kp F9   &kp F10 &trans   &kp F11 &kp F12     &kp SLASH &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp KP_COMMA &kp KP_EQUAL
   &trans &trans   &trans  &trans   &trans  &trans   &trans   &trans    &trans  &trans    &trans   &trans
   &trans &trans   &trans  &trans   &trans  &trans   &kp LEFT &kp DOWN  &kp UP  &kp RIGHT &trans   &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &trans  &trans    &trans   &trans
                           &trans &trans  &trans      &trans    &trans     &trans
                        >;
                };

        };
};
